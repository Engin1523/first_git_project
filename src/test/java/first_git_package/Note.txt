****GIT DAY1******
1. Create a project

2. Create a GITHUB REPOSITORY (Repository is just a folder in Github)
    * go to github
    * Repositories>Create New Repository> postGreJDBC

3. Create a FIRST COMMIT for the first time
   ONLY ONCE  * git init
   EVERY TIME * git add .
   EVERY TIME * git commit -m "first commit"
   ONLY ONCE  * git branch -M main
   ONLY ONCE  * git remote add origin https://github.com/Engin1523/first_git_project.git
   ONLY ONCE  * git push -u origin main
    ***** Then your code should be pushed to github. REFRESH YOUR PAGE TO SEE THE CODE

4. Create a new SECOND COMMIT
    * Create a new java class under first_git_package : MySecondClass
    * Create a new commit and push the code to github
        * git add .
        * git commit -m "added my second java class"
        * git push

5. ADDING SPESIFIC FILES
    * Create two Java Classes: MyThirdClass, MyFourthClass
    * Create a commit with ONLY MyFourthClass
        * git add "src/test/java/first_git_package/MyFourthClass.java"
        * git commit -m "committing my fourth class"
        * git push

6. GIT PULL
    * git pull is used to get the latest code from github in our local
    * git pull = git fetch + git merch
        NOTE: İf git pull trows error then use:
        git fetch
        git merch
    * NOW THAT WE HAVE OUR LOCAL UPDATED, THEN COMMIT THE CODES AND PUSH ALL TOGETHER
        * git add .
        * git commit -m "committing my codes"
        * git push
NOTE: PULL BEFORE PUSH
        * git pull  -> git add .  -> git commit -m "message"  -> git push

7. CONFLICT
    When we try to merge the code that are in the SAME SPOT with DIFFERENT codes.
****How to resolve Conflict
    Manually  fix: remove the illegal characters (error message)
    create a new commit(add, commit)
    then push
****To minimize conflict; we can clone the project, add our new code quickly, then commit then push
    https://github.com/Engin1523/first_git_project.git
    add your new code
    git add .
    git commit -m ""
    git push
NOTE: Git clone brings the new copies. So you will not have conflict issue  because you are not merging anything. You are taking branding.


Note: git status This is our friend. This can be used anytime to see the progress
GİTHUB BAŞARILI OLDU


                ****************DAY 1 SUMMARY***************
******Prerequsions :
* Git Install
* Giyhub account
* Git Authentication (create, add username and token so your account verification is complete)

                            ****************DAY 2***************
                    BRANCHING










